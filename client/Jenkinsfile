pipeline {
    agent any
    tools {
        nodejs 'node-11.10.0'
    }
    stages {
        stage('SCM Checkout') {
            steps {
                git branch: 'development', credentialsId: 'jenk', url: 'git@github.com:LinoHallerRios/AppLecturas.git'
            }
        }
        stage('Install'){
          steps {
            parallel 'Client Install': {
              script {
                sh 'cd client && npm install'
              }
            }
          }
        }
        stage('Build'){
          steps {
            parallel 'Client Build': {
              script {
                sh 'cd client && npm build'
              }
            }
          }
        }
        stage('Sonar Gate') {
          steps{
            script {
              withSonarQubeEnv('sonar-6') {
                def scannerHome = tool 'sonar33';
                sh "${scannerHome}/bin/sonar-scanner"
              }
              timeout(time: 30 , unit: 'MINUTES'){
                def qg = waitForQualityGate()
                if (qg.status != 'OK') {
                  error "Pipeline abortado por no pasar quality gates: ${qg.status}"
                }
              }
            }
          }
        }
        stage('IBMCloud Deploy') {
          steps {
            script {
              sh 'echo Realizando deploy en Ibmcloud...'
            }
          }
        }
    }
}
